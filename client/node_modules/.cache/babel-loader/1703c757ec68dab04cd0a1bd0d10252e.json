{"ast":null,"code":"var _jsxFileName = \"/Users/kristinegonzales/Projects/spotify-stats/client/src/components/Spotify/GetRecentlyPlayed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TableRow from \"../TableRow\";\nimport \"../styles/SpotifyInfo.css\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"https://api.spotify.com/v1/me/player/recently-played?limit=50\";\n\nfunction GetRecentlyPlayed() {\n  _s();\n\n  const [data, setData] = useState({});\n  const token = localStorage.getItem('accessToken');\n\n  const getRecentlyPlayed = async () => {\n    const url = `${ENDPOINT}`;\n\n    try {\n      const response = await axios.get(ENDPOINT, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      setData(response.data);\n      return response.data;\n    } catch (error) {\n      window.location = \"/\";\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    getRecentlyPlayed();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recently-played-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Recently Played\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data__table data__table__recent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid__recent\",\n            children: data !== null && data !== void 0 && data.items ? data.items.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n              img: item.track.album.images[2].url,\n              name: item.track.name,\n              artist: item.track.artists[0].name,\n              time: item.played_at,\n              url: item.track.external_urls.spotify\n            }, `${item.played_at} + ${item.track.uri}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(GetRecentlyPlayed, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = GetRecentlyPlayed;\nexport default GetRecentlyPlayed;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetRecentlyPlayed\");","map":{"version":3,"sources":["/Users/kristinegonzales/Projects/spotify-stats/client/src/components/Spotify/GetRecentlyPlayed.js"],"names":["React","useState","useEffect","axios","TableRow","Footer","ENDPOINT","GetRecentlyPlayed","data","setData","token","localStorage","getItem","getRecentlyPlayed","url","response","get","headers","Authorization","error","window","location","items","map","item","track","album","images","name","artists","played_at","external_urls","spotify","uri"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAQ,2BAAR;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,MAAMC,QAAQ,GAAG,+DAAjB;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMS,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAd;;AAEA,QAAMC,iBAAiB,GAAG,YAAY;AAClC,UAAMC,GAAG,GAAI,GAAER,QAAS,EAAxB;;AACA,QAAI;AACA,YAAMS,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUV,QAAV,EAAoB;AACvCW,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE,YAAYR;AADtB;AAD8B,OAApB,CAAvB;AAKAD,MAAAA,OAAO,CAACM,QAAQ,CAACP,IAAV,CAAP;AACA,aAAOO,QAAQ,CAACP,IAAhB;AACH,KARD,CAQE,OAAOW,KAAP,EAAc;AACZC,MAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACH;;AAAA;AACJ,GAbD;;AAeAnB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,sBACKL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEc,KAAN,GAAcd,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAgBC,IAAD,iBAC1B,QAAC,QAAD;AAAwD,cAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwB,CAAxB,EAA2Bb,GAAxF;AAA6F,cAAA,IAAI,EAAEU,IAAI,CAACC,KAAL,CAAWG,IAA9G;AACI,cAAA,MAAM,EAAEJ,IAAI,CAACC,KAAL,CAAWI,OAAX,CAAmB,CAAnB,EAAsBD,IADlC;AACwC,cAAA,IAAI,EAAEJ,IAAI,CAACM,SADnD;AAC8D,cAAA,GAAG,EAAEN,IAAI,CAACC,KAAL,CAAWM,aAAX,CAAyBC;AAD5F,eAAgB,GAAER,IAAI,CAACM,SAAU,MAAKN,IAAI,CAACC,KAAL,CAAWQ,GAAI,EAArD;AAAA;AAAA;AAAA;AAAA,oBADW,CAAd,GAEuH;AAH5H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoBH;;GA5CQ1B,iB;;KAAAA,iB;AA8CT,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TableRow from \"../TableRow\";\nimport  \"../styles/SpotifyInfo.css\"\nimport Footer from \"../Footer\";\n\nconst ENDPOINT = \"https://api.spotify.com/v1/me/player/recently-played?limit=50\";\n\nfunction GetRecentlyPlayed() {\n    const [data, setData] = useState({});\n\n    const token = localStorage.getItem('accessToken');\n\n    const getRecentlyPlayed = async () => {\n        const url = `${ENDPOINT}`\n        try {\n            const response = await axios.get(ENDPOINT, {\n                headers: {\n                    Authorization: \"Bearer \" + token,\n                },\n            });\n            setData(response.data)\n            return response.data;\n        } catch (error) {\n            window.location = \"/\";\n        };\n    }\n\n    useEffect(() => {\n        getRecentlyPlayed();\n    }, []);\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"recently-played-container\">\n                    <div className=\"title\" >\n                        <h1>Recently Played</h1>\n                    </div>\n                    <div className=\"data__table data__table__recent\">\n                        <div className=\"grid grid__recent\">\n                            {data?.items ? data.items.map((item) =>\n                                <TableRow key={`${item.played_at} + ${item.track.uri}`} img={item.track.album.images[2].url} name={item.track.name}\n                                    artist={item.track.artists[0].name} time={item.played_at} url={item.track.external_urls.spotify}></TableRow>) : null}\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        </>\n    )\n\n}\n\nexport default GetRecentlyPlayed;"]},"metadata":{},"sourceType":"module"}